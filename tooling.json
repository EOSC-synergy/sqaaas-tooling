{
    "tools": {
        "scm": {
            "git": {
                "version": "2.34.1",
                "docs": "https://git-scm.com/",
                "docker": {
                    "image": "bitnami/git:2.34.1",
                    "reviewed": "2021-12-30"
                },
                "args": [
                    {
                        "type": "positional", "description": "Pick out and massage parameters", "value": "rev-parse", "selectable": false
                    },
                    {
                        "type": "optional", "description": "Current working directory is inside the repository's work directory?", "option": "--is-inside-work-tree", "value": "", "selectable": false
                    }
                ],
                "reporting": {
                    "validator": "boolean",
                    "requirement_level": "REQUIRED",
                    "subcriterion": ["QC.Acc01", "QC.Doc01.1"]
                }
            }
        },

        "Workflow_manager": {
            "PyOphidia": {
                "docs": "https://pyophidia.readthedocs.io/en/latest/",
                "executable" : "find_oph_workflows.py",
                "docker": {
                        "dockerfile": "QC.Sty/Ophidia/Dockerfile",
                        "reviewed": "2024-10-02"
                 },
                "args": [
                 {
                    "type": "optional",
                    "description": "Path to the folder where the workflows are located",
                    "value": ".",
                    "selectable": false,
                    "explicit_paths": true,
		    "option":"--path"
                 },
		 {
                    "type": "optional",
                    "description": "Arguments neccesary for workflow validation",
                    "value": "{'filename':['1','historic']}",
                    "option":"--args"
                 }
                        ],
                "reporting": {
                   "validator": "Ophidia",
                   "subcriterion": "QC.Sty",
                   "lang_name": "Ophidia",
                   "tool_name": "PyOphidia",
                   "requirement_level": "RECOMMENDED"
                             }
                         }
        },

        "C++": {
            "oclint": {
                "version": "20.11",
                "docs": "https://oclint.org/",
                "docker": {
                    "image": "drakorgaur/oclint:3077181575",
                    "reviewed": "2024-03-18"
                },
                "args": [
                    {
                        "type": "positional", "description": "File/s to lint", "value": "", "selectable": false, "repeatable": true, "explicit_paths": true
                    },
                    {
                        "type": "positional", "description": "Compiler flags", "value": "-- -c", "selectable": false, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "C++",
                    "tool_name": "oclint",
                    "requirement_level": "REQUIRED"
                }
            }
        },

        "Dockerfile": {
            "hadolint": {
                "version": "v2.8.0-0-g398770f-dirty",
                "docs": "https://github.com/hadolint/hadolint",
                "docker": {
                    "image": "hadolint/hadolint:2.8.0-alpine",
                    "reviewed": "2021-06-21"
                },
                "args": [
                    {
                        "type": "positional", "description": "Path to Dockerfile", "value": "*Dockerfile*", "format": "string", "selectable": true, "repeatable": true, "explicit_paths": true
                    },
                    {
                        "type": "optional", "description": "Ignore rules (see https://github.com/hadolint/hadolint#rules)", "option": "--ignore", "value": "", "format": "string", "selectable": true, "repeatable": true
                    },
                    {
                        "type": "optional", "description": "Exit with failure code only when rules with a severity equal to or above THRESHOLD are violated", "option": "--failure-threshold", "value": ["error", "warning", "info", "style"], "format": "array", "selectable": true, "repeatable": false
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "Dockerfile",
                    "tool_name": "hadolint",
                    "requirement_level": "REQUIRED"
                }
            }
        },
        "Go": {
            "staticcheck": {
                "version": "2022.1.3",
                "docs": "https://staticcheck.io",
                "docker": {
                    "dockerfile": "QC.Sty/staticcheck/Dockerfile",
                    "reviewed": "2022-10-06"
                },
                "args": [
                    {
                        "type": "optional", "description": "set output format", "option": "-f", "value": ["json", "text", "stylish"], "format": "array", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "positional", "description": "source file(s) or directory(s) to be tested", "value": "./...", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "Go",
                    "tool_name": "staticcheck",
                    "requirement_level": "REQUIRED"
                }
            },
            "gosec": {
                "version": "2.13.1",
                "docs": "https://github.com/securego/gosec/",
                "docker": {
                    "dockerfile": "QC.Sec/gosec/Dockerfile",
                    "reviewed": "2022-03-05"
                },
                "args": [
                    {
                        "type": "optional", "description": "set output format", "option": "-fmt", "value": ["json", "yaml", "csv", "junit-xml", "html", "sonarqube", "golint", "sarif", "text"], "format": "array", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "filter out the issues with a lower severity than the given value", "option": "-severity", "value": ["high", "medium", "low"], "format": "array", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "only show output when errors are found", "option": "-quiet", "value": "", "format": "string", "selectable": false, "repeatable": false
                    },
                    {
                        "type": "positional", "description": "source file(s) or directory(s) to be tested", "value": "./...", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "gosec",
                    "requirement_level": "REQUIRED"
                }
            }
	},
        "Ruby": {
            "rubocop": {
                "version": "1.36.0",
                "docs": "https://docs.rubocop.org/",
                "docker": {
                    "dockerfile": "QC.Sty/rubocop/Dockerfile",
                    "reviewed": "2022-10-07"
                },
                "args": [
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "Ruby",
                    "tool_name": "rubocop",
                    "requirement_level": "REQUIRED"
                }
            },
            "brakeman": {
                "version": "1.36.0",
                "docs": "https://brakemanscanner.org//",
                "docker": {
                    "dockerfile": "QC.Sty/brakeman/Dockerfile",
                    "reviewed": "2022-10-10"
                },
                "args": [
                    {
                        "type": "positional", "description": "source file(s) or directory(s) to be tested", "value": ".", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sec02",
                    "lang_name": "Ruby",
                    "tool_name": "brakeman",
                    "requirement_level": "REQUIRED"
                }
            }
	},
        "JavaScript": {
            "eslint": {
                "version": "8.23.1",
                "docs": "https://eslint.org/",
                "docker": {
                    "dockerfile": "QC.Sty/eslint/Dockerfile",
                    "reviewed": "2022-10-07"
                },
                "args": [
                    {
                        "type": "positional", "description": "source file(s) or directory(s) to be tested", "value": ".", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "JavaScript",
                    "tool_name": "eslint"
                }
            },
            "stylelint": {
                "version": "14.13.0",
                "docs": "https://stylelint.io/",
		"executable": "npx",
                "docker": {
                    "dockerfile": "QC.Sty/stylelint/Dockerfile",
                    "reviewed": "2022-10-11"
                },
                "args": [
                    {
                        "type": "positional", "description": "plugin", "value": "stylelint", "format": "string", "selectable": false, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "absolute path to config base", "option": "--config-basedir", "value": ".", "format": "string", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "path to a specific configuration file", "option": "--config", "value": "/root/.stylelintrc.json", "format": "string", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "positional", "description": "source file(s) or directory(s) to be tested", "value": "**/*.{js,ts,css,vue}", "value_has_commas": true, "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "JavaScript",
                    "tool_name": "stylelint",
                    "requirement_level": "RECOMMENDED"
                }
            }
        },
        "Java": {
            "checkstyle": {
                "version": "8.43",
                "docs": "https://github.com/checkstyle/checkstyle",
                "executable": "mvn",
                "docker": {
                    "image": "maven",
                    "reviewed": "1970-01-01"
                },
                "args": [
                    {
                        "type": "positional", "description": "Maven goal", "value": "checkstyle:check", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "Java",
                    "tool_name": "checkstyle",
                    "requirement_level": "REQUIRED"
                }
            }
        },
        "JSON": {
            "jsonlint": {
                "executable": "jsonlint-cli",
                "version": "1.6.3",
                "docs": "https://github.com/zaach/jsonlint",
                "docker": {
                    "dockerfile": "QC.Sty/jsonlint/Dockerfile",
                    "reviewed": "2021-11-23"
                },
                "args": [
                    {
                        "type": "positional", "description": "Path to JSON file", "value": "\"**/*.json\"", "format": "string", "selectable": true, "repeatable": false
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Sty01",
                    "lang_name": "JSON",
                    "tool_name": "jsonlint",
                    "requirement_level": "REQUIRED"
                }
            }
        },
        "Python": {
	        "pytest": {
                "version": "7.1.3",
                "docs": "https://pytest.org/",
                "docker": {
                    "image": "eoscsynergy/sqaaas-pytest:7.1.3-alpha",
                    "reviewed": "2023-08-09"
                },
                "args": [
                    {
                        "id": "test_path", "type": "positional", "description": "path to the folder containing the test cases", "value": "", "format": "string", "selectable": true, "repeatable": true
                    },
                    {
                        "id": "json_report", "type": "optional", "description": "create JSON report", "option": "--json-report", "value": "", "format": "string", "selectable": false, "repeatable": false
                    },
                    {
                        "id": "json_report_indent", "type": "optional", "description": "pretty-print JSON with specified indentation level", "option": "--json-report-indent", "value": "4", "format": "string", "selectable": false, "repeatable": false
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "requirement_level": "REQUIRED",
                    "subcriterion": "QC.Uni01"
                }
            },
            "bandit": {
                "version": "1.7.4",
                "docs": "https://bandit.readthedocs.io/",
                "docker": {
                    "dockerfile": "QC.Sec/bandit/Dockerfile",
                    "reviewed": "2022-03-04"
                },
                "args": [
                    {
                        "type": "optional", "description": "specify output format", "option": "-f", "value": "json", "format": "string", "selectable": false, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "only show output in the case of an error", "option": "--quiet", "value": "", "format": "string", "selectable": false, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "report only issues of a given confidence level or higher", "option": "--confidence-level", "value": ["high", "all", "low", "medium"], "format": "array", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "report only issues of a given severity level or higher", "option": "--severity-level",  "value": ["high", "all", "low", "medium"], "format": "array", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "find and process files in subdirectories", "option": "--recursive", "value": "", "format": "string", "selectable": false, "repeatable": false
                    },
                    {
                        "type": "positional", "description": "source file(s) or directory(s) to be tested", "value": ".", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "bandit",
                    "requirement_level": "REQUIRED"
                }
            },
            "flake8": {
                "version": "4.0.1 (mccabe: 0.6.1, pycodestyle: 2.8.0, pyflakes: 2.4.0)",
                "docs": "https://flake8.pycqa.org/",
                "docker": {
                    "image": "pipelinecomponents/flake8:0.9.0",
                    "reviewed": "2022-03-04"
                },
                "args": [
                    {
                        "type": "positional", "description": "Path to Python project or file/s", "value": ".", "format": "string", "selectable": true, "repeatable": true
                    },
                    {
                        "type": "optional", "description": "Comma-separated list of files or directories to exclude", "option": "--exclude", "value": "", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "flake8",
                    "requirement_level": "REQUIRED"
                }
            },
            "pycodestyle": {
                "version": "2.8.0",
                "docs": "https://pycodestyle.pycqa.org/",
                "docker": {
                    "dockerfile": "QC.Sty/pycodestyle/Dockerfile",
                    "reviewed": "2021-11-23"
                },
                "args": [
                    {
                        "type": "positional", "description": "Path to Python project or file/s", "value": ".", "format": "string", "selectable": true, "repeatable": true
                    }
                ]
            },
            "tox": {
                "jepl_support": true,
                "version": "3.14.0",
                "docs": "https://tox.readthedocs.io/",
                "docker": {
                    "image": "painless/tox@sha256:4f31b329507f9ab658e3c36c5252ad063cabe3d978d6836e0ba322ccb79af060",
                    "reviewed": "1970-01-01"
                },
                "args": [
                    {
                        "type": "optional", "description": "Path to the tox.ini file", "option": "-c", "value": "tox.ini", "format": "string", "selectable": true
                    },
                    {
                        "id": "tox_env", "type": "optional", "description": "Test environment", "option": "-e", "value": "", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": ["QC.Uni01", "QC.Sec02", "QC.Sty01"],
                    "lang_name": "Python",
                    "tool_name": "tox"
                }

            }
        },
        "fair": {
            "fair-eva": {
                "executable" : "fair-eva.py",
                "version": "latest",
                "docs": "QC.FAIR/fair-eva.py",
                "docker": {
                    "image": "eoscsynergy/sqaaas-fair_eva:3.0.3",
                    "oneshot": false,
                    "reviewed": "2024-12-10"
                },
                "args": [
                    {
                        "type": "optional", "format": "string", "description": "Identifier of the (meta)data", "id": "persistent_identifier", "option": "--id", "value": "http://hdl.handle.net/10261/157765", "selectable": true
                    },
                    {
                        "type": "optional", "format": "string", "description": "FAIR EVA plugin name", "id": "metadata_protocol", "option": "--plugin", "value": "oai-pmh", "selectable": true
                    },
                    {
                        "type": "optional", "format": "string", "description": "(meta)data repository endpoint", "id": "metadata_endpoint", "option": "--repository", "value": "http://digital.csic.es/dspace-oai/request", "selectable": true
                    },
                    {
                        "type": "optional", "format": "string", "description": "FAIR EVA endpoint", "id": "evaluator_endpoint", "option": "--api-endpoint", "value": "http://localhost:9090/v1.0/rda/rda_all", "selectable": false
                    },
                    {
                        "type": "optional", "format": "string", "description": "Provides JSON output", "option": "--json", "value": "", "selectable": false
                    }
                ],
            	"reporting": {
                    "validator": "fairEva",
                    "threshold": 0,
                    "requirement_level": "REQUIRED"
            	}
            },
            "F-UJI": {
                "docs": "https://github.com/pangaea-data-publisher/fuji/blob/master/README.md",
                "docker": {
                    "image": "steinsteiny/fuji:v1.3.8.full",
                    "oneshot": false,
                    "reviewed": "2022-06-02"
                },
                "executable": "fuji.py",
                "args": [
                    {
                        "type": "optional", "format": "string", "description": "Object Identifier", "option": "-OID", "value": "http://hdl.handle.net/10261/157765", "selectable": true
                    },
                    {
                        "type": "optional", "format": "string", "description": "F-UJI endpoint", "option": "--tool_endpoint", "value": "http://localhost:1071/fuji/api/v1/evaluate", "selectable": true
                    },
                    {
                        "type": "optional", "format": "array",  "description": "The type of the Metadata Service:", "option": "-T", "value": ["oai_pmh", "sparql", "ogc_csw"], "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "format": "string", "description": "Metadata Service Endpoint", "option": "-E", "value": "http://digital.csic.es/dspace-oai/request", "selectable": true
                    }
                ],
            "reporting": {
                    "validator": "fuji",
                    "threshold": 0
                }
            }
        },
        "license": {
            "licensee": {
                "version": "9.17.0",
                "docs": "https://github.com/licensee/licensee",
                "docker": {
                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                    "reviewed": "2021-06-28"
                },
                "args": [
                    {
                        "type": "subcommand", "description": "Detect the license of the given project", "value": "detect", "selectable": false, "args": [
                            {
                                "type": "positional", "description": "Path to project's license", "value": ".", "selectable": false
                            }
                        ]
                    },
                    {
                        "type": "optional", "format": "string", "description": "Confidence level", "option": "--confidence", "value": "60", "selectable": false, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "JSON output", "option": "--json", "value": "", "selectable": false
                    }
                ],
                "reporting": {
                    "validator": "licensee",
                    "threshold": 50,
                    "requirement_level": "REQUIRED"
                }
            },
            "checkLicense": {
                "version": "latest",
                "docs": "https://github.com/EOSC-synergy/sqa-composer-templates/tree/main/QC.Lic",
                "docker": {
                    "dockerfile": "Qc.Lic/Dockerfile",
                    "composer_file": "QC.Lic/docker-compose.yml",
                    "reviewed": "1970-01-01"
                }
            }
        },
        "Citation File Format": {
            "cff-converter-python": {
                "version": "2.0.0",
                "docs": "https://github.com/citation-file-format/cff-converter-python",
                "docker": {
                    "dockerfile": "QC.Met/cff-converter-python/Dockerfile",
                    "reviewed": "2022-01-19"
                },
                "executable": "cffconvert",
                "args": [
                    {
                        "type": "optional", "description": "Validate the CITATION.cff file", "option": "--validate", "value": "", "selectable": false
                    }
                ],
                "reporting": {
                    "validator": "cff",
                    "requirement_level": "REQUIRED",
                    "subcriterion": "QC.Met01"
                }
            }
        },
        "CodeMeta": {
            "checkCitable": {
                "version": "latest",
                "docs": "https://github.com/EOSC-synergy/sqa-composer-templates/tree/main/QC.Met",
                "docker": {
                    "dockerfile": "Qc.Met/checkCitable/Dockerfile",
                    "composer_file": "QC.Met/checkCitable/docker-compose.yml",
                    "reviewed": "1970-01-01"
                }
            },
            "validate_codemeta": {
                "version": "latest",
                "docs": "",
                "docker": {
                    "image": "alpine:3.15.0",
                    "reviewed": "2022-01-11"
                },
                "executable": "cat",
                "args": [
                    {
                        "type": "positional", "description": "Codemeta file name", "value": "codemeta.json", "selectable": false
                    }
                ],
                "reporting": {
                    "validator": "json_not_empty",
                    "requirement_level": "REQUIRED",
                    "subcriterion": "QC.Met01"
                }
            }
        },
        "Markdown": {
            "markdownlint": {
                "version": "0.11.0",
                "docs": "https://github.com/markdownlint/markdownlint",
                "docker": {
                    "dockerfile": "QC.Doc/markdownlint/Dockerfile",
                    "reviewed": "1970-01-01"
                },
                "executable": "mdl",
                "args": [
                    {
                        "type": "optional", "description": "JSON output", "option": "--json", "value": "", "selectable": false
                    },
                    {
                        "type": "positional", "description": "Project's root path", "value": ".", "selectable": true, "format": "string"
                    }
                ],
                "reporting": {
                    "validator": "markdownlint",
                    "requirement_level": "RECOMMENDED",
                    "doc_file_type": "Markdown",
                    "doc_file_standard": "markdownlint"
                }
            }
        },
        "reStructuredText": {
            "restructuredtext-lint": {
                "version": "1.3.2",
                "docs": "https://github.com/twolfson/restructuredtext-lint",
                "docker": {
                    "dockerfile": "QC.Doc/restructuredtext-lint/Dockerfile",
                    "reviewed": "2022-01-18"
                },
                "executable": "rst-lint",
                "args": [
                    {
                        "type": "optional", "description": "Minimum error level to report (default: 'warning')", "option": "--level", "value": [
                            "warning", "error", "severe", "info", "debug"
                        ], "format": "array", "selectable": true
                    },
                    {
                        "type": "optional", "description": "Format of the output (default: 'text')", "option": "--format", "value": [
                            "json", "text"
                        ], "format": "array", "selectable": true
                    },
                    {
                        "type": "positional", "description": "File/folder to lint", "value": ".", "selectable": true, "format": "string"
                    }
                ],
                "reporting": {
                    "validator": "markdownlint",
                    "requirement_level": "RECOMMENDED",
                    "doc_file_type": "reStructuredText",
                    "doc_file_standard": "restructuredtext-lint"
                }
            }
        },
        "Contribution-enabling Files": {
            "find_doc_files.py": {
                "version": "latest",
                "docs": "QC.Doc/find_doc_files.py",
                "docker": {
                    "dockerfile": "QC.Doc/Dockerfile",
                    "reviewed": "2022-01-26"
                },
                "args": [
                    {
                        "type": "optional", "description": "Type of file to look for in the code repository", "option": "--file_type", "value": [
                            "all", "README", "CODE_OF_CONDUCT", "CONTRIBUTING"
                        ],  "format": "array", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "Path to look for in the code repository", "option": "--path", "value": "", "format": "string", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "Filter by extension (default: ['', '.markdown', '.mdown', '.mkdn', '.md', '.textile', '.rdoc', '.org', '.creole', '.mediawiki', '.wiki', '.rst', '.asciidoc', '.adoc', '.asc', '.pod'])", "option": "--extension", "value": "",  "selectable": true, "repeatable": false
                    }
                ],
                "reporting": {
                    "validator": "find_doc_files",
                    "threshold": 0,
                    "requirement_level": "REQUIRED"
                }
            }
        },
        "Semantic Versioning": {
            "get_git_tags.py": {
                "version": "latest",
                "docs": "QC.Ver/get_git_tags.py",
                "docker": {
                    "dockerfile": "QC.Ver/Dockerfile",
                    "reviewed": "2022-05-10"
                },
                "reporting": {
                    "validator": "is_semver",
                    "requirement_level": "REQUIRED"
                }
            }
        },
        "Kubernetes": {
            "kubectl (via kustomize)": {
                "version": "1.23.6",
                "docs": "https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/",
                "docker": {
                    "image": "bitnami/kubectl:1.23",
                    "reviewed": "2022-03-23"
                },
                "template": "kubectl_kustomize",
                "args": [
                    {
                        "type": "positional", "description": "Kustomization directory", "id": "k8s_config_files", "value": "", "format": "string", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "[from kubectl-rollout-status] The length of time to wait before ending watch, zero means never. Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h)",  "id": "k8s_rollout_status_timeout", "option": "--timeout", "value": "0s",  "format": "string", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "Jenkins credential ID with the value of KUBECONFIG environment variable", "option": "--kubeconfig-jenkins-credential-id", "value": "kubernetes-cluster",  "format": "string", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "optional", "description": "KUBECONFIG environment variable name", "option": "--kubeconfig-jenkins-credential-variable", "value": "KUBECONFIG",  "format": "string", "selectable": false, "repeatable": false
                    }
                ]
            },
            "kubectl (via configuration files)": {
                "version": "1.23.6",
                "docs": "https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/",
                "docker": {
                    "image": "bitnami/kubectl:1.23",
                    "reviewed": "2022-03-23"
                },
                "template": "kubectl_config_files",
                "args": [
                    {
                        "type": "positional", "description": "File, directory or URL of the configuration file in YAML format", "id": "k8s_config_files", "value": "", "format": "string", "selectable": true, "repeatable": true,
                        "type": "optional", "description": "[from kubectl-rollout-status] The length of time to wait before ending watch, zero means never. Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h)",  "id": "k8s_rollout_status_timeout", "option": "--timeout", "value": "0s",  "format": "string", "selectable": true, "repeatable": false,
                        "type": "optional", "description": "Jenkins credential ID with the value of KUBECONFIG environment variable", "option": "--kubeconfig-jenkins-credential-id", "value": "kubernetes-cluster",  "format": "string", "selectable": true, "repeatable": false,
                        "type": "optional", "description": "KUBECONFIG environment variable name", "option": "--kubeconfig-jenkins-credential-variable", "value": "KUBECONFIG",  "format": "string", "selectable": false, "repeatable": false
                    }
                ]
            }
        },
        "Infrastructure Manager": {
            "im_client": {
                "version": "1.5.11",
                "docs": "https://imdocs.readthedocs.io/",
                "docker": {
                    "image": "grycap/im-client:ec3",
                    "reviewed": "2022-05-26",
                    "oneshot": false,
                    "entrypoint": ["/bin/sleep", "infinity"],
                    "environment": ["OPENSTACK_USER", "OPENSTACK_PASS", "IM_USER", "IM_PASS"]
                },
                "template": "im_client",
                "args": [
                    {
                        "type": "positional", "description": "Path to deployment file (RADL or TOSCA)", "id": "im_config_file", "value": "", "format": "string", "selectable": true, "repeatable": false
                    },
                    {
                        "type": "positional", "description": "OpenStack infrastructure to use for the deployment", "id": "openstack_site_id", "value": ["incd"], "format": "array", "selectable": true, "repeatable": false
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "SvcQC.Dep01",
                    "lang_name": "Infrastructure Manager (IM)",
                    "tool_name": "im_client.py",
                    "requirement_level": "REQUIRED"
                }
            },
            "ec3_client": {
                "version": "2.2.1",
                "docs": "https://ec3.readthedocs.io/en/latest/",
                "docker": {
                    "image": "grycap/im-client:ec3",
                    "reviewed": "2022-05-26",
                    "oneshot": false,
                    "entrypoint": ["/bin/sleep", "infinity"],
                    "environment": ["OPENSTACK_USER", "OPENSTACK_PASS", "IM_USER", "IM_PASS"]
                },
                "template": "ec3_client",
                "args": [
                	{
                	    "type": "positional",
                	    "description": "Path to EC3 templates in the local repository",
                	    "id": "ec3_templates_repo_dir",
                	    "value":  "./",
                	    "format": "string",
                	    "selectable": true,
                	    "repeatable": false
                	},
                	{
                	    "type": "positional",
                	    "description": "EC3 template names used to deploy the cluster (without '.radl' extension)",
                	    "id": "ec3_templates",
                	    "value": "",
                	    "format": "string",
                	    "selectable": true,
                	    "repeatable": true
                	},
                	{
                	    "type": "positional",
                	    "description": "OpenStack infrastructure to use for the deployment",
                	    "id": "openstack_site_id",
                	    "value": ["ifca", "incd"],
                	    "format": "array",
                	    "selectable": true,
                	    "repeatable": false
                	}
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "SvcQC.Dep01",
                    "lang_name": "Elastic Cloud Computing Cluster (EC3)",
                    "tool_name": "ec3",
                    "requirement_level": "REQUIRED"
                }
            }
        },
        "default": {
            "commands": {
                "docs": "https://indigo-dc.github.io/jenkins-pipeline-library/2.0.0/user/config_file.html#commands",
                "docker": {
                    "image": "alpine:3.20.0",
                    "reviewed": "1970-01-01"
                },
                "executable": "",
                "args": [
                    {
                        "id": "commands", "type": "positional", "description": "Commands", "value": "", "format": "string", "selectable": true, "repeatable": true
                    }
                ],
                "reporting": {
                    "validator": "jenkins_exit_status",
                    "subcriterion": "QC.Uni01",
                    "lang_name": "bash",
                    "tool_name": "bash"
                }
            }
        }
    },
    "criteria": {
        "QC.Acc": {
            "type": "software",
            "description": {
                "msg": "Code publicly available and managed by a version control system",
                "improves": "collaboration, reproducibility",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#code-accessibility-qc.acc"
            },
            "tools": {
                "scm": ["git"]
            }
        },
        "QC.Doc": {
            "type": "software",
            "description": {
                "msg": "Treat documentation as code by using markup languages to automatically build and place it in online repositories",
                "improves": "outreach capacity, documentation maintenance",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#documentation-qc.doc"
            },
            "tools": {
                "Python": ["tox"],
                "Markdown": ["markdownlint"],
                "reStructuredText": ["restructuredtext-lint"],
                "Contribution-enabling Files": ["find_doc_files.py"]
            },
            "tools_qaa_specific": {
                "scm": ["git"]
            }
        },
        "QC.FAIR": {
            "type": "fair",
            "description": {
                "msg": "FAIRness level of Digital Objects.",
                "improves": "findability, accessibility, interoperability, reusability",
                "docs": "https://indigo-dc.github.io/sqa-baseline/"
            },
            "tools": {
                "fair": ["fair-eva"]
            }
        },
        "QC.Lic": {
            "type": "software",
            "description": {
                "msg": "Usage of an open license to distribute your code",
                "improves": "external contributions, reusability",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#licensing-qc.lic"
            },
            "tools": {
                "license": ["licensee"]
            }
        },
        "QC.Met": {
            "type": "software",
            "description": {
                "msg": "Make source code citable",
                "improves": "findability",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#code-accessibility-qc.acc"
            },
            "tools": {
                "CodeMeta": ["checkCitable", "validate_codemeta"],
                "Citation File Format": ["cff-converter-python"]
            }
        },
        "QC.Sec": {
            "type": "software",
            "description": {
                "msg": "Secure your software by finding (statically) common issues associated to the programming language in use and look for disclosed security vulnerabilities",
                "improves": "security issues detection",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#security-qc.sec"
            },
            "tools": {
                "Python": ["tox", "bandit"],
                "Go": ["gosec"]
            }
        },
        "QC.Sty": {
            "type": "software",
            "description": {
                "msg": "Use code style standards to guide your code writing so you let others understand it",
                "improves": "readability, reusability",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#code-style-qc.sty"
            },
            "tools": {
                "C++": ["oclint"],
                "Dockerfile": ["hadolint"],
                "JSON": ["jsonlint"],
                "Python": ["tox", "flake8", "pycodestyle"],
                "Go": ["staticcheck"],
                "Ruby": ["rubocop"],
                "Java": ["checkstyle"],
                "Workflow_manager": ["PyOphidia"]
            }
        },
        "QC.Uni": {
            "type": "software",
            "description": {
                "msg": "Test the behaviour of segments or units within your code (e.g. conditionals, loops, functions)",
                "improves": "code design, early bug detection",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#unit-testing-qc.uni"
            },
            "tools": {
                "Python": ["tox", "pytest"]
            }
        },
        "QC.Ver": {
            "type": "software",
            "description": {
                "msg": "Software releases follow Semantic Versioning specification",
                "improves": "dependency management",
                "docs": "https://indigo-dc.github.io/sqa-baseline/#semantic-versioning-qc.ver"
            },
            "tools": {
                "Semantic Versioning": ["get_git_tags.py"]
            }
        },
        "SvcQC.Dep": {
            "type": "service",
            "description": {
                "msg": "Perform the service deployment in an automated fashion following Infrastructure as Code (IaC) templates",
                "improves": "immutable infrastructure deployment and maintenance",
                "docs": "https://eosc-synergy.github.io/service-qa-baseline/#dep"
            },
            "tools": {
                "Infrastructure Manager": [
                    "im_client",
                    "ec3_client"
                ]
            }
        },
        "SvcQC.Fun": {
            "type": "service",
            "description": {
                "msg": "Ensure compliance with the functional requirements to meet your users’ expectations",
                "improves": "end-user satisfaction, usability",
                "docs": "https://eosc-synergy.github.io/service-qa-baseline/#fun"
            },
            "tools": {
                "Python": ["tox"]
            }
        }
    }
}
